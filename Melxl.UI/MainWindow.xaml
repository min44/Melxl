<Window x:Class="Melxl.UI.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:ui="clr-namespace:Melxl.UI"
        FontFamily="./Fonts/#Roboto" mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="800">

    <Window.Resources>
        <ResourceDictionary>
            <BooleanToVisibilityConverter x:Key="VisibilityConverter" />
            <Style TargetType="Button">
                <Setter Property="FontSize" Value="20" />
                <Setter Property="Margin" Value="5" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="BorderBrush" Value="#bbb" />
                <Setter Property="Foreground" Value="DarkGray" />
            </Style>
        </ResourceDictionary>
    </Window.Resources>

    <Window.InputBindings>
        <KeyBinding Key="Esc" Command="{Binding EscPress}" />
    </Window.InputBindings>

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="ContentRendered">
            <i:InvokeCommandAction Command="{Binding Rendered}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="100" Grid.Row="0" />
            <RowDefinition Height="*" Grid.Row="1" />
        </Grid.RowDefinitions>

        <StackPanel Orientation="Horizontal">
            <TextBlock VerticalAlignment="Center" HorizontalAlignment="Left" Text="{Binding State}" />
            <TextBlock Text="{Binding Selected}" />
            <Button Command="{Binding Remove}" Height="50" Width="120" />
        </StackPanel>

        <DataGrid
            Grid.Row="1"
            x:Name="DataGrid"
            CanUserResizeColumns="True"
            ItemsSource="{Binding Persons, NotifyOnTargetUpdated=True}"
            SelectionMode="Extended"
            HorizontalContentAlignment="Center">
            <DataGrid.RowStyle>
                <Style TargetType="{x:Type DataGridRow}" BasedOn="{StaticResource {x:Type DataGridRow}}">
                    <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                </Style>
            </DataGrid.RowStyle>
            <DataGrid.Columns>
                <DataGridTextColumn Header="Id" Binding="{Binding Id}" />
                <DataGridTextColumn Header="Name" Binding="{Binding Name}" />
                <DataGridTextColumn Header="Age" Binding="{Binding Age}" />
            </DataGrid.Columns>
        </DataGrid>
    </Grid>
</Window>