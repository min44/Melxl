// <auto-generated />
namespace Melxl.DataAccess.Migrations

open System
open Melxl.DataAccess
open Microsoft.EntityFrameworkCore
open Microsoft.EntityFrameworkCore.Infrastructure
open Microsoft.EntityFrameworkCore.Metadata
open Microsoft.EntityFrameworkCore.Migrations
open Microsoft.EntityFrameworkCore.Storage.ValueConversion

[<DbContext(typeof<EntityProvider.BloggingContext>)>]
[<Migration("20220325163555_AddPostsTable")>]
type AddPostsTable() =
    inherit Migration()

    override this.Up(migrationBuilder:MigrationBuilder) =
        migrationBuilder.CreateTable(
            name = "Posts"
            ,columns = (fun table -> 
            {|
                Id =
                    table.Column<int>(
                        nullable = false
                        ,``type`` = "INTEGER"
                    ).Annotation("Sqlite:Autoincrement", true)
                Title =
                    table.Column<string>(
                        nullable = false
                        ,``type`` = "TEXT"
                    )
                BlogId =
                    table.Column<int>(
                        nullable = false
                        ,``type`` = "INTEGER"
                    )
            |})
            , constraints =
                (fun table -> 
                    table.PrimaryKey("PK_Posts", (fun x -> (x.Id) :> obj)
                    ) |> ignore
                    table.ForeignKey(
                        name = "FK_Posts_Blogs_BlogId"
                        ,column = (fun x -> (x.BlogId) :> obj)
                        ,principalTable = "Blogs"
                        ,principalColumn = "Id"
                        ,onDelete = ReferentialAction.Cascade
                        ) |> ignore

                )
        ) |> ignore

        migrationBuilder.CreateIndex(
            name = "IX_Posts_BlogId"
            ,table = "Posts"
            ,column = "BlogId"
            ) |> ignore


    override this.Down(migrationBuilder:MigrationBuilder) =
        migrationBuilder.DropTable(
            name = "Posts"
            ) |> ignore


    override this.BuildTargetModel(modelBuilder: ModelBuilder) =
        modelBuilder.HasAnnotation("ProductVersion", "6.0.3") |> ignore

        modelBuilder.Entity("Melxl.DataAccess.EntityProvider+Blog", (fun b ->

            b.Property<int>("Id")
                .IsRequired(true)
                .ValueGeneratedOnAdd()
                .HasColumnType("INTEGER")
                |> ignore

            b.Property<string>("Url")
                .IsRequired(true)
                .HasColumnType("TEXT")
                |> ignore

            b.HasKey("Id")
                |> ignore


            b.ToTable("Blogs") |> ignore

        )) |> ignore

        modelBuilder.Entity("Melxl.DataAccess.EntityProvider+Post", (fun b ->

            b.Property<int>("Id")
                .IsRequired(true)
                .ValueGeneratedOnAdd()
                .HasColumnType("INTEGER")
                |> ignore

            b.Property<int>("BlogId")
                .IsRequired(true)
                .HasColumnType("INTEGER")
                |> ignore

            b.Property<string>("Title")
                .IsRequired(true)
                .HasColumnType("TEXT")
                |> ignore

            b.HasKey("Id")
                |> ignore


            b.HasIndex("BlogId")
                |> ignore

            b.ToTable("Posts") |> ignore

        )) |> ignore
        modelBuilder.Entity("Melxl.DataAccess.EntityProvider+Post", (fun b ->
            b.HasOne("Melxl.DataAccess.EntityProvider+Blog", "Blog")
                .WithMany()
                .HasForeignKey("BlogId")
                .OnDelete(DeleteBehavior.Cascade)
                .IsRequired()
                |> ignore

        )) |> ignore

